# Docker-specific configuration
spring.application.name=notification-service
server.port=8084

# Database Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/notificationdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id=notification-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.booking.*
spring.kafka.consumer.properties.spring.json.type.mapping=budgetAlert:com.booking.notificationservice.event.BudgetAlertEvent

# Kafka Topics
spring.kafka.topic.budget-alerts=budget-alerts
spring.kafka.topic.expenses=expenses

# Email Configuration (placeholder for actual SMTP settings)
spring.mail.host=smtp.example.com
spring.mail.port=587
spring.mail.username=notification@example.com
spring.mail.password=password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Logging Configuration
logging.level.com.booking.notificationservice=INFO
logging.level.org.springframework.kafka=WARN